apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "calcom.fullname" . }}
  labels:
    {{- include "calcom.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "calcom.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "calcom.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "calcom.serviceAccountName" . }}
      # CRITICAL: Pod security context
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      # CRITICAL: Init container to fix all permissions
      initContainers:
        - name: fix-permissions
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: 
            - sh
            - -c
            - |
              echo "🔧 Fixing all Cal.com permissions..."
              
              # Copy application files to writable volume
              echo "📁 Copying application files..."
              cp -r /calcom/* /app/ 2>/dev/null || true
              
              # Fix ownership and permissions
              echo "🔒 Setting proper ownership..."
              chown -R 1000:1000 /app
              chmod -R 755 /app
              
              # Specifically fix critical directories
              echo "📂 Fixing critical directories..."
              mkdir -p /app/.yarn/cache /app/.yarn/global /app/node_modules
              mkdir -p /app/apps/web/.next /app/apps/web/public
              
              # Make all directories writable by the app user
              chmod -R 775 /app/.yarn
              chmod -R 775 /app/apps/web/.next
              chmod -R 775 /app/apps/web/public
              chmod -R 775 /app/node_modules
              
              # Remove any existing lock files
              rm -f /app/.yarn/install-state.gz
              rm -f /app/yarn.lock
              rm -f /app/package-lock.json
              
              # Set proper ownership again
              chown -R 1000:1000 /app
              
              echo "✅ Permissions fixed successfully"
          securityContext:
            runAsUser: 0  # Run as root to fix permissions
            runAsGroup: 0
            allowPrivilegeEscalation: true
          volumeMounts:
            - name: app-volume
              mountPath: /app
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          # CRITICAL: Set working directory to writable volume
          workingDir: /app
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          # Improved health checks with longer timeouts
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 120  # Longer initial delay for first setup
            periodSeconds: 30
            timeoutSeconds: 15
            failureThreshold: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 10
            failureThreshold: 6
          env:
            # CRITICAL: Override built-in URL to prevent replacement
            - name: BUILT_NEXT_PUBLIC_WEBAPP_URL
              value: {{ .Values.calcom.config.webappUrl }}
            
            # Cal.com configuration
            - name: NEXT_PUBLIC_WEBAPP_URL
              value: {{ .Values.calcom.config.webappUrl }}
            - name: NEXT_PUBLIC_API_V2_URL
              value: {{ .Values.calcom.config.apiV2Url }}
            - name: NEXTAUTH_URL
              value: {{ .Values.calcom.config.nextAuthUrl | default (printf "%s/api/auth" .Values.calcom.config.webappUrl) }}
            - name: NEXT_PUBLIC_WEBSITE_TERMS_URL
              value: {{ .Values.calcom.config.websiteTermsUrl }}
            - name: NEXT_PUBLIC_WEBSITE_PRIVACY_POLICY_URL
              value: {{ .Values.calcom.config.websitePrivacyPolicyUrl }}
            - name: NODE_ENV
              value: {{ .Values.calcom.config.nodeEnv }}
            - name: CALCOM_TELEMETRY_DISABLED
              value: {{ .Values.calcom.telemetry.disabled | quote }}
            - name: NEXT_PUBLIC_LICENSE_CONSENT
              value: {{ .Values.calcom.license.consent | quote }}
            - name: CALCOM_LICENSE_KEY
              value: {{ .Values.calcom.license.key | quote }}
            
            # File system configuration
            - name: YARN_CACHE_FOLDER
              value: "/app/.yarn/cache"
            - name: YARN_GLOBAL_FOLDER
              value: "/app/.yarn/global"
            - name: YARN_INSTALL_STATE_PATH
              value: "/app/.yarn/install-state.gz"
            - name: HOME
              value: "/app"
            - name: TMPDIR
              value: "/app/tmp"
            
            # Database configuration
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: database-url
                  optional: false
            - name: DATABASE_DIRECT_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: database-direct-url
                  optional: true
            - name: DATABASE_HOST
              value: {{ include "calcom.databaseHost" . }}
            
            # Core secrets
            - name: NEXTAUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: nextauth-secret
            - name: CALENDSO_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: encryption-key
            
            # Additional configuration from values
            {{- if .Values.calcom.additionalConfig }}
            {{- range $key, $value := .Values.calcom.additionalConfig }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            
            # Integration configurations
            {{- if .Values.calcom.secrets.email.serverHost }}
            - name: EMAIL_FROM
              value: {{ .Values.calcom.secrets.email.from }}
            - name: EMAIL_FROM_NAME
              value: {{ .Values.calcom.secrets.email.fromName }}
            - name: EMAIL_SERVER_HOST
              value: {{ .Values.calcom.secrets.email.serverHost }}
            - name: EMAIL_SERVER_PORT
              value: {{ .Values.calcom.secrets.email.serverPort | quote }}
            - name: EMAIL_SERVER_USER
              value: {{ .Values.calcom.secrets.email.serverUser }}
            - name: EMAIL_SERVER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: email-password
            {{- end }}
            {{- if .Values.calcom.secrets.google.apiCredentials }}
            - name: GOOGLE_API_CREDENTIALS
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: google-api-credentials
            {{- end }}
            {{- if .Values.calcom.secrets.microsoft.graphClientId }}
            - name: MS_GRAPH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: ms-graph-client-id
            - name: MS_GRAPH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: ms-graph-client-secret
            {{- end }}
            {{- if .Values.calcom.secrets.zoom.clientId }}
            - name: ZOOM_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: zoom-client-id
            - name: ZOOM_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: zoom-client-secret
            {{- end }}
          # CRITICAL: Mount writable volume
          volumeMounts:
            - name: app-volume
              mountPath: /app
            - name: tmp-volume
              mountPath: /tmp
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      # CRITICAL: Volumes for writable file system
      volumes:
        - name: app-volume
          emptyDir:
            sizeLimit: 10Gi  # Increased size for full app
        - name: tmp-volume
          emptyDir:
            sizeLimit: 1Gi
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}