apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "calcom.fullname" . }}
  labels:
    {{- include "calcom.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "calcom.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "calcom.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "calcom.serviceAccountName" . }}
      # Pod security context - fsGroup handles permissions
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: "Always"
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      # Init container running as non-root user 1000
      initContainers:
        - name: setup-app
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: 
            - sh
            - -c
            - |
              echo "🔧 Setting up Cal.com application (non-root)..."
              
              # Copy application files (fsGroup ensures we can write)
              echo "📁 Copying application files..."
              cp -r /calcom/* /app/ 2>/dev/null || true
              
              # Create necessary directories
              echo "📂 Creating directories..."
              mkdir -p /app/.yarn/cache
              mkdir -p /app/.yarn/global  
              mkdir -p /app/node_modules
              mkdir -p /app/apps/web/.next
              mkdir -p /app/apps/web/public
              mkdir -p /app/tmp
              
              # Set permissions (fsGroup makes this work)
              echo "🔒 Setting permissions..."
              chmod -R 755 /app/.yarn || true
              chmod -R 755 /app/apps/web/.next || true
              chmod -R 755 /app/node_modules || true
              chmod -R 755 /app/tmp || true
              
              # Remove any problematic files
              echo "🧹 Cleaning up..."
              rm -f /app/.yarn/install-state.gz || true
              rm -f /app/yarn.lock || true
              
              # Create a marker file to indicate setup is complete
              touch /app/.setup-complete
              
              echo "✅ Setup completed successfully"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
          volumeMounts:
            - name: app-volume
              mountPath: /app
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          workingDir: /app
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          # Startup probe to handle long initialization
          startupProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 30  # Allow up to 5 minutes for startup
          livenessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 10
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /api/health
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          env:
            # CRITICAL: Prevent URL replacement by making them match
            - name: BUILT_NEXT_PUBLIC_WEBAPP_URL
              value: {{ .Values.calcom.config.webappUrl }}
            
            # Cal.com configuration
            - name: NEXT_PUBLIC_WEBAPP_URL
              value: {{ .Values.calcom.config.webappUrl }}
            - name: NEXT_PUBLIC_API_V2_URL
              value: {{ .Values.calcom.config.apiV2Url }}
            - name: NEXTAUTH_URL
              value: {{ .Values.calcom.config.nextAuthUrl | default (printf "%s/api/auth" .Values.calcom.config.webappUrl) }}
            - name: NEXT_PUBLIC_WEBSITE_TERMS_URL
              value: {{ .Values.calcom.config.websiteTermsUrl }}
            - name: NEXT_PUBLIC_WEBSITE_PRIVACY_POLICY_URL
              value: {{ .Values.calcom.config.websitePrivacyPolicyUrl }}
            - name: NODE_ENV
              value: {{ .Values.calcom.config.nodeEnv }}
            - name: CALCOM_TELEMETRY_DISABLED
              value: {{ .Values.calcom.telemetry.disabled | quote }}
            - name: NEXT_PUBLIC_LICENSE_CONSENT
              value: {{ .Values.calcom.license.consent | quote }}
            - name: CALCOM_LICENSE_KEY
              value: {{ .Values.calcom.license.key | quote }}
            
            # File system configuration for writable directories
            - name: YARN_CACHE_FOLDER
              value: "/app/.yarn/cache"
            - name: YARN_GLOBAL_FOLDER
              value: "/app/.yarn/global"
            - name: YARN_INSTALL_STATE_PATH
              value: "/app/.yarn/install-state.gz"
            - name: HOME
              value: "/app"
            - name: TMPDIR
              value: "/app/tmp"
            - name: XDG_CACHE_HOME
              value: "/app/.cache"
            
            # Database configuration
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: database-url
            - name: DATABASE_DIRECT_URL
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: database-direct-url
                  optional: true
            - name: DATABASE_HOST
              value: {{ include "calcom.databaseHost" . }}
            
            # Core secrets
            - name: NEXTAUTH_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: nextauth-secret
            - name: CALENDSO_ENCRYPTION_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: encryption-key
            
            # Additional configuration from values
            {{- if .Values.calcom.additionalConfig }}
            {{- range $key, $value := .Values.calcom.additionalConfig }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            {{- end }}
            
            # Integration configurations
            {{- if .Values.calcom.secrets.email.serverHost }}
            - name: EMAIL_FROM
              value: {{ .Values.calcom.secrets.email.from }}
            - name: EMAIL_FROM_NAME
              value: {{ .Values.calcom.secrets.email.fromName }}
            - name: EMAIL_SERVER_HOST
              value: {{ .Values.calcom.secrets.email.serverHost }}
            - name: EMAIL_SERVER_PORT
              value: {{ .Values.calcom.secrets.email.serverPort | quote }}
            - name: EMAIL_SERVER_USER
              value: {{ .Values.calcom.secrets.email.serverUser }}
            - name: EMAIL_SERVER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: email-password
            {{- end }}
            {{- if .Values.calcom.secrets.google.apiCredentials }}
            - name: GOOGLE_API_CREDENTIALS
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: google-api-credentials
            {{- end }}
            {{- if .Values.calcom.secrets.microsoft.graphClientId }}
            - name: MS_GRAPH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: ms-graph-client-id
            - name: MS_GRAPH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: ms-graph-client-secret
            {{- end }}
            {{- if .Values.calcom.secrets.zoom.clientId }}
            - name: ZOOM_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: zoom-client-id
            - name: ZOOM_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "calcom.secretName" . }}
                  key: zoom-client-secret
            {{- end }}
          volumeMounts:
            - name: app-volume
              mountPath: /app
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: app-volume
          emptyDir:
            sizeLimit: 8Gi
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}